plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = "com.example"
version = "0.0.1-SNAPSHOT"

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}


repositories {
	mavenCentral()
	maven {
		url = uri("https://jitpack.io")
	}
	maven { url 'https://repo.spring.io/snapshot' }
	maven {
		name = 'Central Portal Snapshots'
		url = 'https://central.sonatype.com/repository/maven-snapshots/'
	}
}

ext {
	set('springAiVersion', "1.0.1")   // ðŸ‘ˆ must be outside repositories
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6:2.17.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'


	// PostgreSQL
	implementation 'org.postgresql:postgresql:42.7.3'

	// Spring AI
	implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
	// Replace the following with the starter dependencies of specific modules you wish to use
	implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.theokanning.openai-gpt3-java:service:0.14.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-web"

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


